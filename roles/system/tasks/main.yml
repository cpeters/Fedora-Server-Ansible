---
- name: Set hostname
  ansible.builtin.hostname:
    name: fedora
    use: fedora

# - name: Configure DNF
#   tasks:
#     - command: cp /etc/dnf/dnf.conf /etc/dnf/dnf.conf.backup
#       ignore_errors: true
#
#     - lineinfile:
#         path: /etc/dnf/dnf.conf
#         line: "{{ item }}"
#         state: present
#       with_items:
#         - 'fastestmirror=True'
#         - 'max_parallel_downloads=10'
#         - 'deltarpm=True'

- name: Add RPM Fusion Free repository
  dnf_repository:
   name: rpmfusion-free
   description: RPM Fusion Free for Fedora $releasever
   baseurl: https://mirrors.rpmfusion.org/free/fedora/releases/$releasever/Everything/$basearch/os/
   gpgkey: https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-$releasever
   gpgcheck: true
   enabled: true

- name: Add RPM Fusion Nonfree repository
  dnf_repository:
    name: rpmfusion-nonfree
    description: RPM Fusion Nonfree for Fedora $releasever
    baseurl: https://mirrors.rpmfusion.org/nonfree/fedora/releases/$releasever/Everything/$basearch/os/
    gpgkey: https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-$releasever
    gpgcheck: true
    enabled: true

- name: Update DNF and upgrade packages with refresh
  dnf:
    name: '*'
    state: latest
    update_cache: true

- name: Install Fedora Workstation group
  dnf:
    groupname: 'Fedora Workstation'
    state: present
    update_cache: true

- name: Install flatpak
  dnf:
   name: flatpak
   state: present
   update_cache: true

- name: Add the flathub flatpak repository
  community.general.flatpak_remote:
    name: flathub
    flatpakrepo_url: httsp://dl.flathub.org/repo/flathub.flatpakrepo

- name: Update Firmware with fwupdmgr
  command: fwupdmgr refresh --force && fwupdmgr get-updates && fwupdmgr update

- name: Install system monitoring packages
  dnf:
    name:
      - glances
      - lm_sensors
      - smartmontools
      - smartmontools-selinux
    state: present
    update_cache: true

- name: Detect and load kernel modules
  command: sensors-detect --auto
  register: sensors_detect_output
  changed_when: "'Some chips found' in sensors_detect_output.stdout"

- name: Reload lm_sensors service
  service:
    name: lm_sensors
    state: restarted
  when: sensors_detect_output.changed

- name: Enable graphical target
  systemd:
    name: graphical.target
    state: started
    enabled: true
