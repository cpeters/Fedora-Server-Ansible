---
- name: Set hostname
  ansible.builtin.hostname:
    name: fedora
    use: redhat

- name: Update DNF config
  ansible.builtin.lineinfile:
    path: /etc/dnf/dnf.conf
    line: "{{ item }}"
    state: present
    backup: true
  with_items:
    - 'fastestmirror=True'
    - 'max_parallel_downloads=10'
    - 'deltarpm=True'

# - name: Add RPM Fusion Free repository
#   community.general.dnf_config_manager:
#     name: rpmfusion-free
#     state: enabled
#
# - name: Add RPM Fusion Non-Free repository
#   community.general.dnf_config_manager:
#     name: rpmfusion-nonfree
#     state: enabled

- name: Add RPM Fusion Free repository
  ansible.builtin.yum_repository:
    name: rpmfusion-free
    description: RPM Fusion for Fedora $releasever - Free
    baseurl: https://mirrors.rpmfusion.org/metalink?repo=free-fedora-$releasever&arch=$basearch
    gpgkey: https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-$releasever
    gpgcheck: true
    enabled: true

- name: Add RPM Fusion Nonfree repository
  ansible.builtin.yum_repository:
    name: rpmfusion-nonfree
    description: RPM Fusion for Fedora $releasever - Nonfree
    baseurl: https://mirrors.rpmfusion.org/metalink?repo=nonfree-fedora-$releasever&arch=$basearch
    gpgkey: https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-$releasever
    gpgcheck: true
    enabled: true

# - name: Add RPM Fusion Free and NonFree repositories
#   ansible.builtin.dnf5:
#     name:
#       - 'https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm'
#       - 'https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm'
#     state: present
#     update_cache: true

- name: Update DNF and upgrade packages with refresh
  ansible.builtin.dnf5:
    name: '*'
    state: latest
    update_cache: true

- name: Install Fedora Workstation group
  ansible.builtin.dnf5:
    name: '@Fedora Workstation'
    state: present
    update_cache: true

- name: Install DNF core plugins
  ansible.builtin.dnf5:
    name: dnf-plugins-core
    state: present
    update_cache: true

- name: Install flatpak
  ansible.builtin.dnf5:
    name: flatpak
    state: present
    update_cache: true

- name: Add the flathub flatpak repository
  community.general.flatpak_remote:
    name: flathub
    flatpakrepo_url: httsp://dl.flathub.org/repo/flathub.flatpakrepo

- name: Check Firmware Updates with fwupdmgr
  ansible.builtin.command: fwupdmgr refresh --force && fwupdmgr get-updates && fwupdmgr update
  register: firmware_update_output
  changed_when: "'No updates available' not in firmware_update_output.stdout"

- name: Update Firmware with fwupdmgr
  ansible.builtin.command: fwupdmgr update
  when: firmware_update_output.changed

- name: Install system monitoring packages
  ansible.builtin.dnf5:
    name:
      - glances
      - lm_sensors
      - smartmontools
      - smartmontools-selinux
    state: present
    update_cache: true

- name: Detect and load kernel modules
  ansible.builtin.command: sensors-detect --auto
  register: sensors_detect_output
  changed_when: "'Some chips found' in sensors_detect_output.stdout"

- name: Reload lm_sensors service
  ansible.builtin.service:
    name: lm_sensors
    state: restarted
  when: sensors_detect_output.changed

- name: Enable graphical target
  ansible.builtin.systemd:
    name: graphical.target
    state: started
    enabled: true

# vim: ts=2 sts=2 sw=2 et ft=yaml.ansible
